<?xml version="1.0" encoding="UTF-8"?>
<project name="WJSF" default="deploy-webapp" basedir=".">
	
	<!-- O arquivo build.properties e referenciado pelo build.xml -->
	<property file="build.properties" />
	
	<!-- Configuracoes basicas de diretorios fontes e classes -->
	<property name="source"		value="${basedir}/src/main/java" />
	<property name="build"		value="${basedir}/build/main/java" />
	<property name="classes"	value="${build}/classes" />
	<!-- Configura o diretorio que possui o conteudo web -->
	<property name="WebContent"	value="${basedir}/WebContent" />
	<property name="web.xml"	value="${WebContent}/WEB-INF/web.xml" />
	<tstamp prefix="build-info">
		<format property="data-atual" pattern="d-MMMM-yyyy" locale="pt" />
		<format property="hora-atual" pattern="hh:mm:ss a z" locale="pt" />
		<format property="ano-mes-dia" pattern="yyyy-MM-dd" locale="en" />
	</tstamp>
	<!-- Configura o diretorio remoto do FTP da aplicacao, caso possua -->
	<property name="ftp-remotedir" value="wars-enviados/${contexto-nome}/${build-info.ano-mes-dia}" />
	<!-- Configura o nome do context dessa aplicacao -->
	<property name="war-nome"	value="${contexto-nome}"/>
	<!-- Configura o endereco da pasta de instalacao do Tomcat -->
	<property name="catalina.home"	value="C:/Projetos/Apache/apache-tomcat-8.5.14"/>
	<!-- Configura o diretorio que possui nossos JARs -->
	<property name="lib"		value="${basedir}/WebContent/WEB-INF/lib" />

	<!-- Configura Faces JAR -->
	<path id="lib.faces">
		<fileset dir="${lib}">
			<include name="javax.faces-2.2.9.jar"/>
			<include name="primefaces-5.3.jar"/>
		</fileset>
	</path>
	<!-- Configura Catalina-Ant JARs -->
	<!-- Nota: Ate o tomcat6, era apenas 1 JAR, agora sao 4 JARs -->
	<path id="lib.ant">
		<fileset dir="${lib}">
			<include name="catalina-ant.jar"/>
			<include name="tomcat-coyote.jar"/>
			<include name="tomcat-util.jar"/>
			<include name="tomcat-juli.jar"/>
		</fileset>
	</path>
	<!-- Targets/Tasks Customizadas -->
	<taskdef name="catalina-start"		classname="org.apache.catalina.ant.StartTask"		classpathref="lib.ant"/>
	<taskdef name="catalina-stop"		classname="org.apache.catalina.ant.StopTask"		classpathref="lib.ant"/>
	<taskdef name="catalina-undeploy"	classname="org.apache.catalina.ant.UndeployTask"	classpathref="lib.ant"/>
	<taskdef name="catalina-deploy"		classname="org.apache.catalina.ant.DeployTask"		classpathref="lib.ant"/>
	<taskdef name="catalina-reload"		classname="org.apache.catalina.ant.ReloadTask"		classpathref="lib.ant"/>
	<taskdef name="catalina-list"		classname="org.apache.catalina.ant.ListTask"		classpathref="lib.ant"/>
	<taskdef name="catalina-findleaks"	classname="org.apache.catalina.ant.FindLeaksTask"	classpathref="lib.ant"/>
	<taskdef name="catalina-resources"	classname="org.apache.catalina.ant.ResourcesTask"	classpathref="lib.ant"/>
	<!-- OUTRA FORMA
		Poupar tempo utilizando o catalina-tasks.xml. Ele esta configurado para importar todos os JARs do tomcat,
		onde 4 deles estarao as tasks que precisamos (start, stop, undeploy, deploy, etc)
	<import file="${catalina.home}/bin/catalina-tasks.xml"/>
	-->
	
	<!-- Targets Executaveis -->
	<target name="compilar-webapp" depends="" description="Compile web application">
		<delete dir="${build}" />
		<mkdir dir="${build}" />
		<delete dir="${classes}" />
		<mkdir dir="${classes}" />
		<javac includeantruntime="false" srcdir="${source}" destdir="${classes}" classpathref="lib.faces" />
	</target>
	
	<target name="gerarWar-webapp" depends="compilar-webapp">
		<mkdir dir="${build}" />
		<delete file="${build}/${war-nome}.war" />
		<war warfile="${build}/${war-nome}.war" webxml="${web.xml}">
			<classes dir="${classes}" />
			<fileset dir="${WebContent}">
				<!-- Precisa excluir o web.xml pois webxml ja e um atibuto da tag war acima -->
				<exclude name="WEB-INF/web.xml" />
			</fileset>
			<manifest>
				<attribute name="Built-By" value="${desenvolvedor}" />
				<attribute name="Built-On" value="${build-info.data-atual}" />
				<attribute name="Built-At" value="${build-info.hora-atual}" />
			</manifest>
		</war>		
	</target>

	<!-- Adiciona a nossa aplicacao ao Tomcat -->
	<target name = "deploy-webapp" depends="gerarWar-webapp, undeploy-webapp">
		<catalina-deploy	url="${tomcat.manager.url}"
	    					username="${tomcat.manager.usuario}"
	    					password="${tomcat.manager.senha}"
	    					path="/${contexto-nome}"
	    					war="file:${build}/${war-nome}.war"
		/>
	</target>

	<!-- Remove a nossa aplicacao do Tomcat -->
	<!--
		Nota: As vezes o deploy nao e concluido devido ao leak de recursos entao
		torna-se necessario editar o arquivo context.xml que se encontra na pasta
		"tomcat/config" e incluir um dos atributos antiResourceLocking="true" ou
		antiJARLocking="true"(essa ultima parece nao existir no tomcat8.5).
		Como antiJARLocking e um subset de antiResourceLocking,	entao escolha
		apenas um dos dois como true pra evitar trabalho dobrado pelo tomcat.
	-->
	<target name = "undeploy-webapp">
		<catalina-undeploy	url="${tomcat.manager.url}"
	    					username="${tomcat.manager.usuario}"
	    					password="${tomcat.manager.senha}"
	    					path="/${contexto-nome}"
	    					failonerror="false"
		/>
	</target>

	<!-- Inicia a nossa aplicacao no Tomcat -->
	<target name = "start-webapp">
		<catalina-start		url="${tomcat.manager.url}"
	    					username="${tomcat.manager.usuario}"
							password="${tomcat.manager.senha}"
	    					path="/${contexto-nome}"
		/>
	</target>
	
	<!-- Paraliza a nossa aplicacao no Tomcat -->
	<target name = "stop-webapp">
		<catalina-stop		url="${tomcat.manager.url}"
							username="${tomcat.manager.usuario}"
	       					password="${tomcat.manager.senha}"
	       					path="/${contexto-nome}"
	       					failonerror="false"
		/>
	</target>

	<!-- Recarrega a nossa aplicacao no Tomcat -->
	<target name="reload-webapp" description="Reload web application">
		<catalina-reload	url="${tomcat.manager.url}"
							username="${tomcat.manager.usuario}"
							password="${tomcat.manager.senha}"
							path="/${contexto-nome}"
		/>
	</target>

	<target name="ftp" depends="" description="envia o arquivo war para o servidor">
		<ftp 
			server="${ftp-servidor}" remotedir="${ftp-remotedir}"
			userid="${ftp-usuario.id}" password="${ftp-usuario.senha}"
			action="mkdir" verbose="yes">
		</ftp>
		<ftp 
			server="${ftp-servidor}" remotedir="${ftp-remotedir}"
			userid="${ftp-usuario.id}" password="${ftp-usuario.senha}"
			action="send" verbose="yes" depends="yes">
			<fileset file="${build}/${war-nome}" />
		</ftp>
	</target>

	<target name="mail-upload-complete">
		<mail from="ant@bv.com"
		      tolist="bv@bv.com"
		      subject="${war-nome} foi enviado para o servidor"
		      message="O arquivo ${war-nome} foi enviado  ${ftp-servidor} em ${ftp-remotedir}"/>
	</target>
</project>